/*
 * Copyright 2021 - 2024 the original author or authors.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see [http://www.gnu.org/licenses/]
 */

plugins {
  id 'de.undercouch.download' version '5.4.0'
  id "io.github.gradle-nexus.publish-plugin" version "2.0.0"
}

ext {
  configProjects = [project(":today-cloud-bom"), project(":today-cloud-dependencies")]
  javaProjects = subprojects - configProjects
  samplesProjects = subprojects.findAll { it.path.startsWith(":today-cloud-samples") }
  moduleProjects = javaProjects - samplesProjects
}

configure(allprojects) {
  group = "cn.taketoday.cloud"

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    if (version.endsWith('-SNAPSHOT')) {
      maven { url "https://repo.spring.io/snapshot" }
    }
  }
  configurations.configureEach {
    resolutionStrategy {
      cacheChangingModulesFor 0, "seconds"
      cacheDynamicVersionsFor 0, "seconds"
    }
  }
}

configure(javaProjects) {
  apply plugin: "java"
  apply plugin: 'infra.application'
  apply plugin: 'infra.cloud.conventions'

  if (it.hasProperty("code-coverage")) {
    apply plugin: 'jacoco'
    jacocoTestReport {
      enabled = false
    }
  }

  dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.junit.platform:junit-platform-suite-api")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.mockito:mockito-junit-jupiter")
    testImplementation("org.assertj:assertj-core")
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor("org.projectlombok:lombok")

    // Pull in the latest JUnit 5 Launcher API to ensure proper support in IDEs.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    testRuntimeOnly("org.junit.platform:junit-platform-suite-engine")
  }
}

configure(moduleProjects) {
  apply from: "${rootDir}/gradle/cloud-module.gradle"
}

configure(rootProject) {
  description = "TODAY Cloud"
}

nexusPublishing {
  String repoUsername = project.properties["repoUsername"] ?: System.getenv("SNAPSHOTS_USERNAME")
  String repoPassword = project.properties["repoPassword"] ?: System.getenv("SNAPSHOTS_TOKEN")

  repositories {
    sonatype {
      username.set(repoUsername)
      password.set(repoPassword)
      nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
      snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
    }
  }
}
